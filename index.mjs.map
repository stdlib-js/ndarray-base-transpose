{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n// MODULES //\n\nimport strides2offset from '@stdlib/ndarray-base-strides2offset' ;\n\n\n// MAIN //\n\n/**\n* Transpose a matrix (or a stack of matrices).\n*\n* @param {ndarray} x - input array\n* @throws {Error} must provide an array with two or more dimensions\n* @returns {ndarray} ndarray\n*\n* @example\n* import array from '@stdlib/ndarray-array' ;\n*\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ] );\n* // returns <ndarray>\n*\n* var sh = x.shape;\n* // returns [ 2, 3 ]\n*\n* var y = transpose( x );\n* // returns <ndarray>\n*\n* sh = y.shape;\n* // returns [ 3, 2 ]\n*\n* var bool = ( x.data === y.data );\n* // returns true\n*\n* bool = ( x.get( 0, 1 ) === y.get( 1, 0 ) );\n* // returns true\n*/\nfunction transpose( x ) {\n\tvar tmp;\n\tvar sh;\n\tvar st;\n\tvar N;\n\n\tsh = x.shape;   // WARNING: we assume that `sh` is a copy, which is true of `ndarray` instances!\n\tN = sh.length;\n\tif ( N < 2 ) {\n\t\tthrow new Error( format( '0Mi0c' ) );\n\t}\n\tst = x.strides; // WARNING: we assume that `st` is a copy, which is true of `ndarray` instances!\n\n\ttmp = sh[ N-2 ];\n\tsh[ N-2 ] = sh[ N-1 ];\n\tsh[ N-1 ] = tmp;\n\n\ttmp = st[ N-2 ];\n\tst[ N-2 ] = st[ N-1 ];\n\tst[ N-1 ] = tmp;\n\n\treturn new x.constructor( x.dtype, x.data, sh, st, strides2offset( sh, st ), x.order ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default transpose;\n"],"names":["transpose","x","tmp","sh","st","N","shape","length","Error","format","strides","constructor","dtype","data","strides2offset","order"],"mappings":";;gMAyDA,SAASA,EAAWC,GACnB,IAAIC,EACAC,EACAC,EACAC,EAIJ,IADAA,GADAF,EAAKF,EAAEK,OACAC,QACE,EACR,MAAM,IAAIC,MAAOC,EAAQ,UAY1B,OAVAL,EAAKH,EAAES,QAEPR,EAAMC,EAAIE,EAAE,GACZF,EAAIE,EAAE,GAAMF,EAAIE,EAAE,GAClBF,EAAIE,EAAE,GAAMH,EAEZA,EAAME,EAAIC,EAAE,GACZD,EAAIC,EAAE,GAAMD,EAAIC,EAAE,GAClBD,EAAIC,EAAE,GAAMH,EAEL,IAAID,EAAEU,YAAaV,EAAEW,MAAOX,EAAEY,KAAMV,EAAIC,EAAIU,EAAgBX,EAAIC,GAAMH,EAAEc"}